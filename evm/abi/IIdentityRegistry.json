{"abi":[{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"acceptRegistrationTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"permitter","type":"address"},{"internalType":"bytes","name":"pers","type":"bytes"}],"name":"createIdentity","outputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"destroyIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"getPermitter","outputs":[{"internalType":"contract IPermitter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"getRegistrant","outputs":[{"internalType":"address","name":"current","type":"address"},{"internalType":"address","name":"proposed","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"grantIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"},{"internalType":"address","name":"to","type":"address"}],"name":"proposeRegistrationTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"IdentityId","name":"identity","type":"bytes32"}],"name":"readPermit","outputs":[{"components":[{"internalType":"uint64","name":"expiry","type":"uint64"}],"internalType":"struct IIdentityRegistry.Permit","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"},{"internalType":"address","name":"from","type":"address"}],"name":"revokeIdentity","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"},{"internalType":"address","name":"permitter","type":"address"}],"name":"setPermitter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"IdentityCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"IdentityDestroyed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"IdentityGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"from","type":"address"}],"name":"IdentityRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"identityId","type":"bytes32"}],"name":"PermitterChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"identityId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proposed","type":"address"}],"name":"RegistrationTransferProposed","type":"event"},{"inputs":[],"name":"InterfaceUnsupported","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"}],"bytecode":{"linkReferences":{},"object":"0x","sourceMap":""},"deployedBytecode":{"linkReferences":{},"object":"0x","sourceMap":""},"id":0,"metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"InterfaceUnsupported","type":"error"},{"inputs":[],"name":"Unauthorized","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"IdentityCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"IdentityDestroyed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"IdentityGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"from","type":"address"}],"name":"IdentityRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"identityId","type":"bytes32"}],"name":"PermitterChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"IdentityId","name":"identityId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proposed","type":"address"}],"name":"RegistrationTransferProposed","type":"event"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"acceptRegistrationTransfer","stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"permitter","type":"address"},{"internalType":"bytes","name":"pers","type":"bytes"}],"name":"createIdentity","outputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"destroyIdentity","stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"getPermitter","outputs":[{"internalType":"contract IPermitter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"}],"name":"getRegistrant","outputs":[{"internalType":"address","name":"current","type":"address"},{"internalType":"address","name":"proposed","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint64","name":"expiry","type":"uint64"}],"name":"grantIdentity","stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"},{"internalType":"address","name":"to","type":"address"}],"name":"proposeRegistrationTransfer","stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"IdentityId","name":"identity","type":"bytes32"}],"name":"readPermit","outputs":[{"components":[{"internalType":"uint64","name":"expiry","type":"uint64"}],"internalType":"struct IIdentityRegistry.Permit","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"},{"internalType":"address","name":"from","type":"address"}],"name":"revokeIdentity","stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"IdentityId","name":"id","type":"bytes32"},{"internalType":"address","name":"permitter","type":"address"}],"name":"setPermitter","stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"createIdentity(address,bytes)":{"params":{"permitter":"The address of the contract that grants the identity.","pers":"[optional] Extra entropy used to generate the identity."},"returns":{"id":"The newly created identity's id (store this somewhere)."}},"grantIdentity(bytes32,address,uint64)":{"params":{"expiry":"The Unix timestamp at which the permit expires.","id":"The id of the identity to grant.","to":"The address of the permit's recipient."}},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"userdoc":{"kind":"user","methods":{"acceptRegistrationTransfer(bytes32)":{"notice":"Accepts a pending registration transfer. Must be called by the new registrant."},"createIdentity(address,bytes)":{"notice":"Creates a new identity controlled by the specified permitter contract."},"destroyIdentity(bytes32)":{"notice":"Irrevocably destroys the identity. Must be called by the registrant."},"getPermitter(bytes32)":{"notice":"Returns the permitter associated with the identity."},"getRegistrant(bytes32)":{"notice":"Returns the identity's current and proposed registrant(s)."},"grantIdentity(bytes32,address,uint64)":{"notice":"Grants an identity's permit to an account. Must be called by the permitter."},"proposeRegistrationTransfer(bytes32,address)":{"notice":"Initiates a transfer to a new registrant. Must be called by the registrant."},"readPermit(address,bytes32)":{"notice":"Returns the permit to the identity held by the provided account, if any."},"revokeIdentity(bytes32,address)":{"notice":"Called by the identity's permitter to revoke the identity to the recipient."},"setPermitter(bytes32,address)":{"notice":"Sets the identity's new permitter. Must be called by the registrant."}},"version":1}},"settings":{"compilationTarget":{"contracts/identity/v1/IIdentityRegistry.sol":"IIdentityRegistry"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":["@oasisprotocol/sapphire-contracts/contracts/=lib/sapphire-paratime/contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","sapphire-paratime/=lib/sapphire-paratime/"],"viaIR":true},"sources":{"contracts/identity/v1/IIdentityRegistry.sol":{"keccak256":"0x14d726acf6b8c8662a133b50d7cf2752fdd3498ebe58611f6e51973b6f433045","license":"MIT","urls":["bzz-raw://fcc91fcbe6157223121feb70c8339961594bb7be1eb6e7d323bad179df1b8691","dweb:/ipfs/QmP8r5srCyyE3qVgrHYqBkQ4KyZ5TdZNAqfsEGvkdUcdjB"]},"contracts/identity/v1/IPermitter.sol":{"keccak256":"0xb5e0e909c5fa4c244210f4daba3ce092c5eb7f735ceb1069d4ec2876b07ec84e","license":"MIT","urls":["bzz-raw://89a8d49192638441aac4d421f474601022415cc1e40c066fb38dd9575c7e7d1c","dweb:/ipfs/QmRaHd8D7EJG9npNCew2BRWwoatMNTBJYei9fvFvMPGB7n"]},"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c","license":"MIT","urls":["bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e","dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"]}},"version":1},"methodIdentifiers":{"acceptRegistrationTransfer(bytes32)":"cf087a44","createIdentity(address,bytes)":"fcae55b3","destroyIdentity(bytes32)":"996d2ff3","getPermitter(bytes32)":"b9e47a1c","getRegistrant(bytes32)":"d86d31b7","grantIdentity(bytes32,address,uint64)":"1c643570","proposeRegistrationTransfer(bytes32,address)":"73397a57","readPermit(address,bytes32)":"b8272883","revokeIdentity(bytes32,address)":"e7213fc1","setPermitter(bytes32,address)":"55e5bea4","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InterfaceUnsupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"IdentityCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"IdentityDestroyed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"IdentityGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"IdentityRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"IdentityId\",\"name\":\"identityId\",\"type\":\"bytes32\"}],\"name\":\"PermitterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"IdentityId\",\"name\":\"identityId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposed\",\"type\":\"address\"}],\"name\":\"RegistrationTransferProposed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"acceptRegistrationTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"permitter\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"pers\",\"type\":\"bytes\"}],\"name\":\"createIdentity\",\"outputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"destroyIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPermitter\",\"outputs\":[{\"internalType\":\"contract IPermitter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getRegistrant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"current\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposed\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"name\":\"grantIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"proposeRegistrationTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"IdentityId\",\"name\":\"identity\",\"type\":\"bytes32\"}],\"name\":\"readPermit\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"expiry\",\"type\":\"uint64\"}],\"internalType\":\"struct IIdentityRegistry.Permit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"revokeIdentity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"IdentityId\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"permitter\",\"type\":\"address\"}],\"name\":\"setPermitter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createIdentity(address,bytes)\":{\"params\":{\"permitter\":\"The address of the contract that grants the identity.\",\"pers\":\"[optional] Extra entropy used to generate the identity.\"},\"returns\":{\"id\":\"The newly created identity's id (store this somewhere).\"}},\"grantIdentity(bytes32,address,uint64)\":{\"params\":{\"expiry\":\"The Unix timestamp at which the permit expires.\",\"id\":\"The id of the identity to grant.\",\"to\":\"The address of the permit's recipient.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InterfaceUnsupported()\":[{\"notice\":\"The provided contract address does not support the correct interface.\"}],\"Unauthorized()\":[{\"notice\":\"The action is disallowed.\"}]},\"kind\":\"user\",\"methods\":{\"acceptRegistrationTransfer(bytes32)\":{\"notice\":\"Accepts a pending registration transfer. Must be called by the new registrant.\"},\"createIdentity(address,bytes)\":{\"notice\":\"Creates a new identity controlled by the specified permitter contract.\"},\"destroyIdentity(bytes32)\":{\"notice\":\"Irrevocably destroys the identity. Must be called by the registrant.\"},\"getPermitter(bytes32)\":{\"notice\":\"Returns the permitter associated with the identity.\"},\"getRegistrant(bytes32)\":{\"notice\":\"Returns the identity's current and proposed registrant(s).\"},\"grantIdentity(bytes32,address,uint64)\":{\"notice\":\"Grants an identity's permit to an account. Must be called by the permitter.\"},\"proposeRegistrationTransfer(bytes32,address)\":{\"notice\":\"Initiates a transfer to a new registrant. Must be called by the registrant.\"},\"readPermit(address,bytes32)\":{\"notice\":\"Returns the permit to the identity held by the provided account, if any.\"},\"revokeIdentity(bytes32,address)\":{\"notice\":\"Called by the identity's permitter to revoke the identity to the recipient.\"},\"setPermitter(bytes32,address)\":{\"notice\":\"Sets the identity's new permitter. Must be called by the registrant.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/identity/v1/IIdentityRegistry.sol\":\"IIdentityRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@oasisprotocol/sapphire-contracts/contracts/=lib/sapphire-paratime/contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":sapphire-paratime/=lib/sapphire-paratime/\"],\"viaIR\":true},\"sources\":{\"contracts/identity/v1/IIdentityRegistry.sol\":{\"keccak256\":\"0x14d726acf6b8c8662a133b50d7cf2752fdd3498ebe58611f6e51973b6f433045\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fcc91fcbe6157223121feb70c8339961594bb7be1eb6e7d323bad179df1b8691\",\"dweb:/ipfs/QmP8r5srCyyE3qVgrHYqBkQ4KyZ5TdZNAqfsEGvkdUcdjB\"]},\"contracts/identity/v1/IPermitter.sol\":{\"keccak256\":\"0xb5e0e909c5fa4c244210f4daba3ce092c5eb7f735ceb1069d4ec2876b07ec84e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89a8d49192638441aac4d421f474601022415cc1e40c066fb38dd9575c7e7d1c\",\"dweb:/ipfs/QmRaHd8D7EJG9npNCew2BRWwoatMNTBJYei9fvFvMPGB7n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]}},\"version\":1}"}